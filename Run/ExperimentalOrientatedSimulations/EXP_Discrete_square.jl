# See parameter approximation document


using TissueGrowth

# Calculating kf
KF = 8784.2;
Tb = 28.46
l = 500;
Œ©‚ÇÄ = l^2
P = l*4
V‚ÇÄ = abs.(TissueGrowth.V(KF, Œ©‚ÇÄ, 0))
q‚ÇÄ = 1/20;
N = Int(P*q‚ÇÄ) # number of cells
kf = KF/N

# set random seed number for reproducability 
seed = 99

# scaling factor to simulate Œºm instead of mm
Œõ = 10000

# setting up simulation parameters
m = 1 # number of springs per cell
R‚ÇÄ = 282.095  # shape radius Œºm
D = [0.05].*Œõ
l‚ÇÄ = 3.14
#kf = 70#93.13 
Œ∑ = 1.0 
growth_dir = "inward" # Options: "inward", "outward"
Tmax = 28.4 # days
Œ¥t = 0.01
btypes = ["circle"] #, "triangle", "square", "hex", "star","cross"] #Options: ["circle", "triangle", "square", "hex", "star","cross"]
dist_type = "Linear" #Options: ["Linear", "sigmoid", "2sigmoid", "exp",  "sine", "cosine", "quad", "cubic"]

## Cell Behaviours
prolif = false; death = false; embed = false;
Œ± = 0.0;        Œ≤ = 0.0;      Ot = 0.0;
event_Œ¥t = Œ¥t

# 2D simulations 
sols2D, ü•î, üåª = TissueGrowth.sim2D(N,m,R‚ÇÄ,D,l‚ÇÄ,kf,Œ∑,growth_dir,Tmax,Œ¥t,btypes,dist_type,
            prolif, death, embed, Œ±, Œ≤, Ot, event_Œ¥t, seed, 140);

Density_cmap = :jet
Stress_cmap = :viridis

geo = 1
diffusivity = 1

Density_Range = (0.05,0.32)
Stress_Range = (-20, 20)

f = TissueGrowth.plotResults2D(sols2D[diffusivity][geo].u, sols2D[diffusivity][geo].Density, Density_cmap, Density_Range, "Density œÅ", D[diffusivity], kf, (280,280))
f2 = TissueGrowth.plotThetaVsTime(sols2D[diffusivity][geo].u, sols2D[diffusivity][geo].t, sols2D[diffusivity][geo].œà, Stress_cmap, Stress_Range, "Stress œà", D, kf)

# Compare with regression model from Buenzli et al. 2020

# Regression Model Buenzli et al. 2020 equation (1)

Tb = 28.46 # ¬± 2.00
v = 2.02 # ¬± 0.22
t = LinRange(0,28.46,1000)

Œ©_estimate = 1 .- (t./Tb).^v

# Normalising our approximated Œ© from discrete simulation

Œ© = sols2D[1][1].Œ©
Œ©norm_Discrete = Œ©./Œ©[1]
t_sim = sols2D[1][1].t

# Analytic Solution
Œ©norm_Analytic = TissueGrowth.Œ©_analytic(Œ©[1],N,kf,t)./Œ©[1]


f3 = TissueGrowth.plotCompareRegressionBuenzli(Œ©_estimate, t, Œ©norm_Analytic, t, Œ©norm_Discrete, t_sim)



