using TissueGrowth
using DifferentialEquations

EXP_VALUES = true

# set random seed number for reproducability 
seed = 99

if !EXP_VALUES
    # setting up simulation parameters
    N = 100 # number of cells
    m = 1 # number of springs per cell
    R‚ÇÄ = 1.05  # shape radius
    D = [0.05]
    l‚ÇÄ = 1.0
    kf = 0.001
    Œ∑ = 1.0 
    growth_dir = "inward" # Options: "inward", "outward"
    Tmax = 26.0 # days
    Œ¥t_array = [0.01, 0.005, 0.001, 0.0001]
    btypes = ["square"]#, "triangle", "square", "hex", "star","cross"] #Options: ["circle", "triangle", "square", "hex", "star","cross"]
    dist_type = "Linear" #Options: ["Linear", "sigmoid", "2sigmoid", "exp",  "sine", "cosine", "quad", "cubic"]
else
    # scaling factor to simulate Œºm instead of mm
    Œõ = 10000

    # setting up simulation parameters
    N = 100 # number of cells
    m = 1 # number of springs per cell
    R‚ÇÄ = 282.09  # shape radius Œºm
    D = [0.05].*Œõ
    l‚ÇÄ = 3.14
    kf = 93.13 
    Œ∑ = 1.0 
    growth_dir = "inward" # Options: "inward", "outward"
    Tmax = 26.0 # days
    Œ¥t = 0.01
    btypes = ["square"] #, "triangle", "square", "hex", "star","cross"] #Options: ["circle", "triangle", "square", "hex", "star","cross"]
    dist_type = "Linear" #Options: ["Linear", "sigmoid", "2sigmoid", "exp",  "sine", "cosine", "quad", "cubic"]

end

## Cell Behaviours
prolif = false; death = false; embed = false;
Œ± = 0.0001;        Œ≤ = 0.001;      Ot = 62.5;
event_Œ¥t = Œ¥t_array[1]

# 2D simulations 
sols2D_Œ¥t_1, ü•î, üåª = TissueGrowth.sim2D(N,m,R‚ÇÄ,D,l‚ÇÄ,kf,Œ∑,growth_dir,Tmax,Œ¥t_array[1],btypes,dist_type,
            prolif, death, embed, Œ±, Œ≤, Ot, event_Œ¥t, seed, 500, DifferentialEquations.Euler());

Œ©‚ÇÅ = sols2D_Œ¥t_1[1][1].Œ©;
t‚ÇÅ = sols2D_Œ¥t_1[1][1].t;

sols2D_Œ¥t_2, ü•î, üåª = TissueGrowth.sim2D(N,m,R‚ÇÄ,D,l‚ÇÄ,kf,Œ∑,growth_dir,Tmax,Œ¥t_array[2],btypes,dist_type,
            prolif, death, embed, Œ±, Œ≤, Ot, event_Œ¥t, seed, 500, DifferentialEquations.Euler());

Œ©‚ÇÇ = sols2D_Œ¥t_2[1][1].Œ©;
t‚ÇÇ = sols2D_Œ¥t_2[1][1].t;

sols2D_Œ¥t_3, ü•î, üåª = TissueGrowth.sim2D(N,m,R‚ÇÄ,D,l‚ÇÄ,kf,Œ∑,growth_dir,Tmax,Œ¥t_array[3],btypes,dist_type,
            prolif, death, embed, Œ±, Œ≤, Ot, event_Œ¥t, seed, 500, DifferentialEquations.Euler());

Œ©‚ÇÉ = sols2D_Œ¥t_3[1][1].Œ©;
t‚ÇÉ = sols2D_Œ¥t_3[1][1].t;

sols2D_Œ¥t_4, ü•î, üåª = TissueGrowth.sim2D(N,m,R‚ÇÄ,D,l‚ÇÄ,kf,Œ∑,growth_dir,Tmax,Œ¥t_array[4],btypes,dist_type,
            prolif, death, embed, Œ±, Œ≤, Ot, event_Œ¥t, seed, 500, DifferentialEquations.Euler());

Œ©‚ÇÑ = sols2D_Œ¥t_4[1][1].Œ©;
t‚ÇÑ = sols2D_Œ¥t_4[1][1].t;


TissueGrowth.plotŒ¥tAreaResults(Œ©‚ÇÅ,t‚ÇÅ,Œ©‚ÇÇ,t‚ÇÇ,Œ©‚ÇÑ,t‚ÇÑ,N,kf)


Density_cmap = :jet

geo = 1
diffusivity = 1

Density_Range = (0.05,0.32)

f = TissueGrowth.plotResults2D(sols2D_Œ¥t_1[diffusivity][geo].u, sols2D_Œ¥t_1[diffusivity][geo].Density, Density_cmap, Density_Range, "Density œÅ", D[diffusivity], kf, (280,280))